.PHONY: all install clean

#.SUBDIRS: scene1

########################################################################
# C configuration.
# Delete this section if you are not building C files.
#

################################################
# Configuration.  You might want to modify any of these
# configuration variables.
#

# CFLAGS +=
# ASFLAGS +=
# LDFLAGS +=
# INCLUDES +=

################################################
# Uncomment the following section if you want
# to build a C program in the current directory.
#

# CFILES[] =
#    file1
#    main
#
# MAIN = main
#
# .DEFAULT: $(CProgram $(MAIN), $(CFILES))

################################################
# Uncomment the following section if you want to build a C library
# in the current directory.
#

# LIBFILES[] =
#    file1
#    file2
#
# LIB = libxxx
#
# .DEFAULT: $(StaticCLibrary $(LIB), $(LIBFILES))

########################################################################
# OCaml configuration.
# Delete this section if you are not building OCaml files.
#

################################################
# Configuration.  You may want to modify any of these configuration
# variables.
#

#
# This project requires ocamlfind (default - false).
#
# USE_OCAMLFIND = true
#
# OCAMLPACKS[] =
#    pack1
#    pack2
#
# if $(not $(OCAMLFIND_EXISTS))
#    eprintln(This project requires ocamlfind, but is was not found.)
#    eprintln(You need to install ocamlfind and run "omake --configure".)
#    exit 1

#
# Include path
#
# OCAMLINCLUDES +=

#
# Compile native or byte code? 
#
# The default values are defined as follows:
#
# NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
# BYTE_ENABLED = $(not $(OCAMLOPT_EXISTS))

#
# Various options
#
# OCAMLFLAGS    +=
# OCAMLCFLAGS   +=
# OCAMLOPTFLAGS +=
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
# OCamlGeneratedFiles(parser.ml lexer.ml)

################################################
# Build an OCaml library
#

# FILES[] =
#    file1
#    file2
#
# LIB = main
#
# .DEFAULT: $(OCamlLibrary $(LIB), $(FILES))

################################################
# Build an OCaml program
#

# FILES[] =
#    file1
#    file2
#
# PROGRAM =
# OCAML_LIBS +=
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS +=
# OCAML_LIB_FLAGS +=
#
# .DEFAULT: $(OCamlProgram $(PROGRAM), $(FILES))

.SCANNER: %.svg:%.mp

.mp.svg:
	echo "run mpost"
	mpost $<

scene-1.0.mp scene-1.1.mp: scene-1.mp
	python ../../storylc/generate.py scene1 10

scene-1.gif: scene-1.0.svg scene-1.1.svg
	rm -f $@
	convert -delay 1 -loop 1 -size 1024x1024 scene-1.0.svg scene-1.1.svg $@


all: a-1.svg

clean:
	echo "clean"
	rm -f *.svg *.mp4 *.log *.gif *.*.mp
